{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","React","toDefault","visibleGoods","setVisibleGoods","isReversed","setIsReversed","sortField","goods","type","preparedGoods","sort","a","b","alphabet","localeCompare","length","reverse","getParameterGood","className","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,cAAAA,M,KAiCE,IAAME,EAAM,WACjB,MAAwCC,WAAeH,EAASI,WAAhE,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCH,YAAe,GAAnD,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA9BR,SACEC,EACAC,EACAJ,GAEA,IAAIK,EAAa,YAAOF,GAmBxB,OAjBIC,GACFC,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQJ,GACN,KAAKX,EAASgB,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKf,EAASkB,OACZ,OAAOJ,EAAEd,EAASkB,QAAUH,EAAEf,EAASkB,QACzC,QACE,OAAO,MAKXX,IACFK,EAAgBA,EAAcO,WAGzBP,EAMWQ,CAAiBnB,EAAiBI,EAAcE,GAalE,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAgBN,EAASgB,WACxCL,KAAK,SACLU,UAAWE,IAAG,iBACZ,CAAE,WAAYlB,IAAiBL,EAASgB,WAJ5C,iCASA,wBACEM,QAAS,kBAAMhB,EAAgBN,EAASkB,SACxCP,KAAK,SACLU,UAAWE,IAAG,oBACZ,CAAE,WAAYlB,IAAiBL,EAASkB,SAJ5C,4BASA,wBACEI,QA5BQ,kBAEVd,GADJD,IA4BMI,KAAK,SACLU,UAAWE,IAAG,oBAAqB,CAAE,WAAYhB,IAHnD,qBAQCF,GACC,wBACEiB,QA1CI,WACZhB,EAAgBN,EAASI,WACzBI,GAAc,IAyCNG,KAAK,SACLU,UAAU,4BAHZ,sBAUJ,6BACGZ,EAAUe,KAAI,SAACC,GAAD,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6403203a.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-duplicates\nimport * as React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n  toDefault = '',\n}\n\nfunction getParameterGood(\n  goods: string[],\n  type: SortType,\n  isReversed: boolean,\n): string[] {\n  let preparedGoods = [...goods];\n\n  if (type) {\n    preparedGoods.sort((a, b) => {\n      switch (type) {\n        case SortType.alphabet:\n          return a.localeCompare(b);\n        case SortType.length:\n          return a[SortType.length] - b[SortType.length];\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = React.useState(SortType.toDefault);\n  const [isReversed, setIsReversed] = React.useState(true);\n  const sortField = getParameterGood(goodsFromServer, visibleGoods, isReversed);\n\n  const reset = () => {\n    setVisibleGoods(SortType.toDefault);\n    setIsReversed(true);\n  };\n\n  const reverse = () => (\n    isReversed\n      ? setIsReversed(false)\n      : setIsReversed(true)\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setVisibleGoods(SortType.alphabet)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': visibleGoods !== SortType.alphabet })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setVisibleGoods(SortType.length)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': visibleGoods !== SortType.length })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': isReversed })}\n        >\n          Reverse\n        </button>\n\n        {visibleGoods && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortField.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}